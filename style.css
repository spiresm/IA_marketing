<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cas d'usages - iMarketing</title>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preconnect" href="https://cdnjs.cloudflare.com">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap" rel="stylesheet">
    <style>
        /* === STYLES GLOBAUX ET VARIABLES === */
        :root {
            --primary-blue: #0077b6;
            --dark-blue: #005f8a;
            --light-blue: #64B5F6;
            --background-grey: #f0f2f5;
            --card-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            --grey-text: #555;
            /* Dark mode */
            --dark-mode-bg: #222831;
            --dark-mode-text: #EEEEEE;
            --dark-mode-card-bg: #393E46;
            --dark-mode-border: #00ADB5;
        }
        body {
            font-family: 'Segoe UI', 'Inter', sans-serif;
            margin: 0;
            background-color: var(--background-grey);
            color: #333;
            overflow-x: hidden;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            /* CORRECTION : Force la suppression de toute image de fond */
            background-image: none !important;
        }
        main {
            padding: 40px 20px;
            flex-grow: 1;
        }

        /* === STYLES DU MENU (Header simplifié) === */
        .nav-wrapper {
            background-color: #0077b6;
            width: 100%;
            position: relative;
            flex-shrink: 0;
            padding: 5px 0;
        }
        .menu-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 30px;
            box-sizing: border-box;
        }
        nav {
            display: flex;
            justify-content: center;
            align-items: center;
        }
        nav a {
            text-decoration: none; color: white; font-weight: bold;
            font-size: 1.1em; padding: 10px 18px; border-radius: 8px;
            transition: background 0.3s ease; margin: 0 5px;
        }
        nav a:hover { background: rgba(255, 255, 255, 0.2); }
        nav a.active { background-color: white; color: #0077b6; }
        
        .header-top-right {
            position: absolute;
            top: 50%;
            right: 25px;
            transform: translateY(-50%);
            display: flex;
            gap: 20px;
            align-items: center;
        }
        .header-icon-btn {
            color: white;
            text-decoration: none;
            font-size: 1.5rem;
            transition: opacity 0.2s ease;
        }
        .header-icon-btn:hover { opacity: 0.8; }

        /* === STYLES DU CONTENU DE LA PAGE === */
        .create-workflow-button-container {
             max-width: 960px; margin: 25px auto; padding: 0 20px;
             display: flex; justify-content: center;
        }
        .create-workflow-button {
            display: inline-flex; align-items: center; gap: 8px; background-color: var(--primary-blue);
            color: white; padding: 12px 25px; border-radius: 8px; text-decoration: none;
            font-weight: bold; font-size: 1.1em; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Style des filtres */
        .filters-area-container {
            max-width: 960px;
            margin: 30px auto;
        }
        #filters {
            display: flex;
            gap: 15px;
            width: 100%;
            flex-wrap: wrap;
        }
        #filters input, #filters select {
            flex: 1; 
            min-width: 200px;
            background-color: #fff;
            border: 1px solid #dfe1e5;
            border-radius: 24px;
            padding: 12px 20px;
            font-size: 1rem;
            color: #333;
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
        }
        #filters ::-webkit-input-placeholder { color: #888; }
        #filters ::-moz-placeholder { color: #888; }
        #filters :-ms-input-placeholder { color: #888; }
        #filters select {
            background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M5%208l5%205%205-5z%22%20fill%3D%22%235F6368%22%2F%3E%3C%2Fsvg%3E');
            background-repeat: no-repeat;
            background-position: right 15px center;
            background-size: 20px;
            padding-right: 45px;
        }

        /* Design de la galerie et des cartes */
        .galerie-container { max-width: 700px; margin: 0 auto; padding: 20px; }
        #galerie { display: flex; flex-direction: column; gap: 25px; }
        .carte {
            background: #fff; border-left: 6px solid transparent; border-radius: 12px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08); display: flex; flex-direction: column;
            padding: 20px; position: relative; transition: box-shadow 0.2s ease;
        }
        .carte:hover { box-shadow: 0 12px 30px rgba(0, 0, 0, 0.12); }
        .card-header { display: flex; justify-content: space-between; align-items: flex-start; gap: 15px; }
        .tip-title { font-size: 1.4em; font-weight: bold; margin: 0; color: var(--dark-blue); }
        .outil-badge {
            background-color: #e0f2f7; color: var(--primary-blue); font-size: 0.8em; font-weight: bold;
            padding: 5px 10px; border-radius: 20px; margin-top: 10px; align-self: flex-start;
        }
        .card-image-container { margin: 20px 0; text-align: center; }
        .card-thumbnail-preview { width: 100%; height: auto; object-fit: cover; border-radius: 8px; border: 1px solid #eee; }
        .card-actions { display: flex; gap: 10px; margin-top: 20px; }
        .copier-btn, .toggle-content-btn {
            background-color: var(--primary-blue); color: white; border: none; padding: 10px 20px;
            border-radius: 8px; cursor: pointer; font-size: 0.9em; font-weight: 600;
            transition: background-color 0.2s; flex-grow: 1; text-align: center;
        }
        .copier-btn { background-color: var(--light-blue); }
        .metadata-section {
            display: flex; justify-content: space-between; align-items: center; font-size: 0.85em;
            color: var(--grey-text); padding-top: 15px; border-top: 1px solid #f0f0f0; margin-top: 15px;
        }
        .metadata-section .auteur-value a { color: var(--primary-blue); text-decoration: none; font-weight: bold; }
        .supprimer-btn { background: none; border: none; color: #aaa; font-size: 1.2em; cursor: pointer; }
        .supprimer-btn:hover { color: #dc3545; }

        @media (max-width: 768px) {
            nav a { font-size: 0.85em; padding: 6px 10px; }
            .header-icon-btn { font-size: 1.2rem; }
            .header-top-right { gap: 15px; right: 15px; }
            #filters { flex-direction: column; }
        }
    </style>
</head>
<body>

    <div class="nav-wrapper">
        <div class="menu-container">
            <nav>
                <a href="#">Accueil</a>
                <a href="#" class="active">Cas d'usages</a>
                <a href="#">Équipe</a>
                <a href="#">Soumettre un Workflow</a>
            </nav>
        </div>
        <div class="header-top-right">
            <a href="#" class="header-icon-btn" title="Messages"><i class="fas fa-envelope"></i></a>
            <a href="#" class="header-icon-btn" title="Développement"><i class="fas fa-code"></i></a>
        </div>
    </div>

    <main>
        <div class="create-workflow-button-container">
            <a href="#" class="create-workflow-button">Créer un Workflow</a>
        </div>
        
        <div class="filters-area-container">
            <div id="filters">
                <input type="text" id="search-input" placeholder="Rechercher par auteur ou prompt..." />
                <select id="filtre-outil">
                    <option value="">Tous les outils</option>
                </select>
                <select id="filtre-chaine">
                    <option value="">Toutes les chaînes</option>
                </select>
                <select id="filtre-tri">
                    <option value="recent">Plus récent</option>
                    <option value="ancien">Plus ancien</option>
                </select>
            </div>
        </div>

        <div id="galerie-container" class="galerie-container">
            <div id="galerie">
                </div>
        </div>
    </main>

    <script>
        // === DONNÉES D'EXEMPLE ===
        let allTips = [
            { id: 1, titre: "Storyboard automatique à partir d'un script", outil: "Premiere Pro", auteur: "Steeve PIRES MADEIRA", dateCreation: "2025-06-29", imageUrl: "https://images.unsplash.com/photo-1611162617213-6d22e7090d5a?q=80&w=1974&auto=format&fit=crop" },
            { id: 2, titre: "Création d'un logo 3D dans un environnement", outil: "ChatGPT", auteur: "Sabrina LECLERCQ", dateCreation: "2025-06-30", imageUrl: "https://images.unsplash.com/photo-1554177255-61502b352de3?q=80&w=2070&auto=format&fit=crop" },
            { id: 3, titre: "Génération de sous-titres animés", outil: "CapCut", auteur: "John DOE", dateCreation: "2025-07-01", imageUrl: "https://images.unsplash.com/photo-1611605698335-8b1569810432?q=80&w=1974&auto=format&fit=crop" }
        ];

        // === SÉLECTEURS DOM ===
        const galerieDiv = document.getElementById('galerie');
        const filtreOutilSelect = document.getElementById('filtre-outil');
        
        // === FONCTIONS ===
        function displayTips(tipsToDisplay) {
            galerieDiv.innerHTML = '';
            if (tipsToDisplay.length === 0) {
                galerieDiv.innerHTML = '<p style="text-align: center;">Aucun workflow trouvé.</p>';
                return;
            }
            tipsToDisplay.forEach(tip => {
                const dateObj = new Date(tip.dateCreation);
                const formattedDate = dateObj.toLocaleDateString('fr-FR', { year: 'numeric', month: 'long', day: 'numeric' });
                const auteurLink = `<a href="#">${tip.auteur}</a>`;
                let copyButtonHtml = `<button class="copier-btn">Copier le prompt</button>`;
                let previewImageHtml = tip.imageUrl ? `<img src="${tip.imageUrl}" alt="Aperçu" class="card-thumbnail-preview">` : '';
                
                const cardHtml = `
                    <div class="carte" style="border-left-color: ${getToolColor(tip.outil)};">
                        <div class="card-header">
                            <h3 class="tip-title">${tip.titre}</h3>
                            <button class="supprimer-btn" data-id="${tip.id}" title="Supprimer"><i class="fas fa-trash-alt"></i></button>
                        </div>
                        <span class="outil-badge">${tip.outil}</span>
                        ${previewImageHtml ? `<div class="card-image-container">${previewImageHtml}</div>` : ''}
                        <div class="card-actions">
                            <button class="toggle-content-btn" data-id="${tip.id}">Voir le Workflow</button>
                            ${copyButtonHtml}
                        </div>
                        <div class="metadata-section">
                            <span class="metadata-value auteur-value">Par ${auteurLink}</span>
                            <span class="metadata-value date-value">${formattedDate}</span>
                        </div>
                    </div>
                `;
                galerieDiv.insertAdjacentHTML('beforeend', cardHtml);
            });
        }

        function getToolColor(toolName) {
            if (!toolName) return '#cccccc';
            let hash = 0;
            for (let i = 0; i < toolName.length; i++) {
                hash = toolName.charCodeAt(i) + ((hash << 5) - hash);
                hash = hash & hash;
            }
            const hue = Math.abs(hash % 360);
            return `hsl(${hue}, 70%, 55%)`;
        }
        
        function populateFilters() {
            const uniqueOutils = [...new Set(allTips.map(t => t.outil))].sort();
            filtreOutilSelect.innerHTML = '<option value="">Tous les outils</option>' + uniqueOutils.map(o => `<option value="${o}">${o}</option>`).join('');
        }

        // === INITIALISATION ===
        document.addEventListener("DOMContentLoaded", () => {
            populateFilters();
            displayTips(allTips);
        });

    </script>
</body>
</html>
